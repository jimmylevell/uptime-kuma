version: "3.1" 

services:
  uptimekuma:
    image: louislam/uptime-kuma
    networks:
      - traefik-public
    volumes: 
      - uptime-kuma:/app/data
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true # enable traefik
        - traefik.docker.network=traefik-public # put it in the same network as traefik
        - traefik.constraint-label=traefik-public # assign the same label as traefik so it can be discovered
        - traefik.http.routers.uptimekuma.rule=Host(`uptimekuma.app.levell.ch`) # listen to port 80 for request to APP_DOMAIN (use together with the line below)
        - traefik.http.routers.uptimekuma.entrypoints=http
        - traefik.http.routers.uptimekuma.middlewares=https-redirect
        - traefik.http.middlewares.uptimekuma.redirectscheme.scheme=https # redirect traffic to https
        - traefik.http.middlewares.uptimekuma.redirectscheme.permanent=true # redirect traffic to https
        - traefik.http.routers.uptimekuma-secured.rule=Host(`uptimekuma.app.levell.ch`) # listen to port 443 for request to APP_DOMAIN (use together with the line below)
        - traefik.http.routers.uptimekuma-secured.entrypoints=https
        - traefik.http.routers.uptimekuma-secured.tls.certresolver=le # use the Let's Encrypt certificate we set up earlier
        - traefik.http.services.uptimekuma-secured.loadbalancer.server.port=3001 # ask Traefik to search for port of the service container

networks:
   traefik-public:
    external: true

volumes: 
  uptime-kuma:
    external: true
